@charset "UTF-8";

%flexCenter {
	display: flex;
	justify-content: center;
	align-items: center;
}

// loading effect
@mixin Ψ {
	@extend %flexCenter;
	.loading {
		width: 16px;
		height: 16px;
		border-radius: 50%;
		background-color: #fff;
		animation: Ψ-left 2s infinite;
		&:nth-child(2) {
			animation: Ψ-right 2s infinite;
		}
	}
	@keyframes Ψ-left {
		0%, 50%, 100% {
			transform: scale(0);
		}
		25% {
			transform: scale(1.2);
		}
	}
	@keyframes Ψ-right {
		0%, 50%, 100% {
			transform: scale(0);
		}
		75% {
			transform: scale(1.2);
		}
	}
}



@mixin µ {
	width: 20px;
	height: 20px;
	position: relative;
	.loading {
		width: 10px;
		height: 10px;
		border-radius: 50%;
		position: absolute;
		&:nth-child(1),
		&:nth-child(2) {
			top: -5px;
		}
		&:nth-child(3),
		&:nth-child(4) {
			bottom: -5px;
		}
		&:nth-child(1),
		&:nth-child(3) {
			left: -5px;
		}
		&:nth-child(2),
		&:nth-child(4) {
			right: -5px;
		}

		&:nth-child(1) {
			background-color: #6AAEFF;
			animation: µ-left-top 2s ease-in infinite;
		}
		&:nth-child(2) {
			background-color: #71006A;
			animation: µ-right-top 2s ease-in infinite;
		}
		&:nth-child(3) {
			background-color: #6EFF6A;
			animation: µ-left-bottom 2s ease-in infinite;
		}
		&:nth-child(4) {
			background-color: #886200;
			animation: µ-right-bottom 2s ease-in infinite;
		}
	}
	@keyframes µ-left-top {
		0%, 100% {
			transform: translate(0);
		}
		50% {
			transform: translate(20px, 20px);
		}
	}
	@keyframes µ-right-top {
		0%, 100% {
			transform: translate(0);
		}
		50% {
			transform: translate(-20px, 20px);
		}
	}
	@keyframes µ-left-bottom {
		0%, 100% {
			transform: translate(0);
		}
		50% {
			transform: translate(20px, -20px);
		}
	}
	@keyframes µ-right-bottom {
		0%, 100% {
			transform: translate(0);
		}
		50% {
			transform: translate(-20px, -20px);
		}
	}
}


@mixin £ {
	width: 50px;
	height: 50px;
	border: 1px solid #fff;
	border-radius: 100%;
	position: relative;
	animation: £ 1s infinite;
	&::after {
		content: '';
		position: absolute;
		left: 50%;
		top: -5px;
		width: 10px;
		height: 10px;
		background-color: #fff;
		border-radius: 100%;
		transform: translateX(-50%);
	}
	@keyframes £ {
		0% {
			transform: rotate(0);
		}
		100%{
			transform: rotate(360deg);
		}
	}
}


@mixin § {
	@extend %flexCenter;
	.loading {
		width: 16px;
		height: 16px;
		border-radius: 50%;
		background-color: #fff;
		transform: translateZ(-1px);
		&:first-child {
			animation: §-first 1s ease-out infinite;
		}
		&:last-child {
			animation: §-last 1s ease-out infinite;
		}
	}
	@keyframes §-first {
		0%, 50%, 100% {
			transform: translateX(0);
		}
		25% {
			transform: translateX(-20px);
		}
	}
	@keyframes §-last {
		0%, 50%, 100% {
			transform: translateX(0);
		}
		75% {
			transform: translateX(20px);
		}
	}
}

@mixin ♦ {
	.flex {
		@extend %flexCenter;
		&:nth-child(1) {
			.loading {
				&:nth-child(1) {
					animation: ♦ 3s cubic-bezier(0.55, 0.09, 0.72, 0.26) infinite;
				}
				&:nth-child(2) {
					animation: ♦ 3s .25s cubic-bezier(0.55, 0.09, 0.72, 0.26) infinite;
				}
				&:nth-child(3) {
					animation: ♦ 3s .5s cubic-bezier(0.55, 0.09, 0.72, 0.26) infinite;
				}
			}
		}
		&:nth-child(2) {
			margin-top: 9px;
			margin-left: 23px;
			.loading {
				&:nth-child(1) {
					animation: ♦ 3s .75s cubic-bezier(0.55, 0.09, 0.72, 0.26) infinite;
				}
				&:nth-child(2) {
					animation: ♦ 3s 1s cubic-bezier(0.55, 0.09, 0.72, 0.26) infinite;
				}
				&:nth-child(3) {
					animation: ♦ 3s 1.25s cubic-bezier(0.55, 0.09, 0.72, 0.26) infinite;
				}
			}
		}
	}
	.loading {
		width: 22px;
		height: 14px;
		background-color: #fff;
		position: relative;
		margin-left: 2px;
		&::before,
		&::after {
			content: '';
			position: absolute;
			left: 0;
			width: 0;
			height: 0;
			border-width: 7px 11px;
			border-style: solid;
		}
		&::before {
			top: -14px;
			border-color: transparent transparent #fff transparent;
		}
		&::after {
			bottom: -14px;
			border-color: #fff transparent transparent transparent;
		}
	}
	@keyframes ♦ {
		0% {
			opacity: 1;
			transform: scale(1);
		}
		7.1425% {
			opacity: 1;
			transform: scale(1);
		}
		14.284% {
			opacity: 0;
			transform: scale(0);
		}
		21.426% {
			opacity: 0;
			transform: scale(0);
		}
		28.568% {
			opacity: 0;
			transform: scale(0);
		}
		35.71% {
			opacity: 0;
			transform: scale(0);
		}
		42.852% {
			opacity: 0;
			transform: scale(0);
		}
		49.994% {
			opacity: 1;
			transform: scale(1.1);
		}
		57.136% {
			opacity: 1;
			transform: scale(1);
		}
		64.278% {
			opacity: 1;
			transform: scale(1);
		}
		71.42% {
			opacity: 1;
			transform: scale(1);
		}
		78.562% {
			opacity: 1;
			transform: scale(1);
		}
		85.704% {
			opacity: 1;
			transform: scale(1);
		}
		92.846% {
			opacity: 1;
			transform: scale(1);
		}
		100% {
			opacity: 1;
			transform: scale(1);
		}
	}
}

@mixin ♣ {
	@extend %flexCenter;
	.loading {
		width: 40px;
		height: 40px;
		border-radius: 50%;
		border: 4px dashed #fff;
		position: relative;
		transform: rotate(20deg);
		animation: ♣-left 2s linear infinite;
		&::after {
			content: '';
			background-color: #fff;
			position: absolute;
			width: 100%;
			height: 100%;
			border-radius: 50%;
		}
		&:last-child {
			width: 20px;
			height: 20px;
			border: 3px dashed #fff;
			margin-top: 37px;
			margin-left: -8px;
			animation: ♣-right 1s linear infinite;
		}
	}
	@keyframes ♣-left {
		0% {
			transform: rotate(0);
		}
		100% {
			transform: rotate(360deg);
		}
	}
	@keyframes ♣-right {
		0% {
			transform: rotate(360deg);
		}
		100% {
			transform: rotate(0);
		}
	}
}

@mixin ◊ {
	width: 100px;
	height: 100px;
	position: relative;
	animation: ◊ 1s linear infinite;
	&::after,
	&::before {
		content: '';
		position: absolute;
		top: 30px;
		width: 40px;
		height: 40px;
		background-color: #fff;
		border-radius: 50%;
	}
	&::after {
		left: 10px;
		animation: ◊-after 2s infinite;
	}
	&::before {
		right: 10px;
		animation: ◊-after 2s -1s infinite;
	}

	@keyframes ◊-after {
		0%, 100% {
			transform: scale(0);
		}
		50% {
			transform: scale(1.2);
		}
	}
	@keyframes ◊ {
		0% {
			transform: rotate(0);
		}
		100% {
			transform: rotate(360deg);
		}
	}
}

@mixin ≡ {
	transform-style: preserve-3d;
	perspective: 300px;
	.cube {
		transform-style: preserve-3d;
		width: 50px;
		height: 50px;
		position: relative;
		animation: ≡ 6s infinite;
	}
	.top, .bottom,
	.front, .back,
	.left, .right {
		position: absolute;
		top: 0;
		left: 0;
		width: 50px;
		height: 50px;
    	box-shadow: inset 0 0 20px rgba(0,0,0,0.2);
	}
	.top {
		background-color: rgba(255,0,0,.5);
		transform: rotateX(90deg) translateZ(25px);
	}
	.bottom {
		background-color: rgba(255,255,0,.5);
		transform: rotateX(-90deg) translateZ(25px);
	}
	.front {
		background-color: rgba(0,255,0,.5);
		transform:translateZ(25px);
	}
	.back {
		background-color: rgba(255,0,255,.5);
		transform: rotateX(-180deg) translateZ(25px);
	}

	.right {
		background-color: rgba(0,0,255,.5);
		transform: rotateY(-90deg) translateZ(25px);
	}
	.left {
		background-color: rgba(0,255,255,.5);
		transform: rotateY(90deg) translateZ(25px);
	}

	@keyframes ≡ {
		 0%   {
	    	transform:rotateX(0deg) rotateY(0deg) rotateZ(0deg);
	    }
	    16.66%   {
	    	transform:rotateX(90deg) rotateY(0deg) rotateZ(0deg);
	    }
	    33.33%   {
	    	transform:rotateX(90deg) rotateY(0deg) rotateZ(90deg);
	    }
	    50%   {
	    	transform:rotateX(180deg) rotateY(0deg) rotateZ(90deg);
	    }
	    66.66%   {
	    	transform:rotateX(180deg) rotateY(90deg) rotateZ(90deg);
	    }
	    83.33%   {
	    	transform:rotateX(180deg) rotateY(90deg) rotateZ(180deg);
	    }
	    100%   {
	    	transform:rotateX(180deg) rotateY(180deg) rotateZ(180deg);
	    }
	}
}

@mixin ≈ {
	@extend %flexCenter;
	.loading {
		position: relative;
		margin: 0 4px;
		width: 5px;
		height: 15px;
		border-radius: 2px;
		border: solid #690;
		border-width: 0 1px 1px 0;
		background: #9b2;
		transform-origin: center bottom;
		animation: ≈ 5s infinite;
		&::after {
			content: '';
			position: absolute;
			bottom: 0;
			z-index: -1;
			width: 5px;
			height: 5px;
			background: transparent;
			box-shadow: 0 2px rgba(0,0,0,.3);
			opacity: 0;
  			transform-origin: 0% 0%;
			animation: ≈-after 5s infinite;
		}
		@for $i from 2 through 5 {
			&:nth-child(#{$i}) {
				animation-delay: #{.3*(($i)-1)}s;
				&::after {
					animation-delay: #{.3*(($i)-1)}s;
				}
				@if ($i == 5) {
					animation-name: ≈-last;
					&::after {
						animation-name: ≈-after-last;
					}
				}
			}
		}
	}

	@keyframes ≈ {
		10% {
			transform: rotate(70deg);
		}
		60% {
			transform: rotate(70deg);
		}
		70% {
			transform: rotate(0deg);
		}
	}
	@keyframes ≈-last {
		10% {
			transform: rotate(90deg);
		}
		60% {
			transform: rotate(90deg);
		}
		70% {
			transform: rotate(0deg);
		}
	}

	@keyframes ≈-after {
		10% {
			transform: rotate(-70deg);
			width: 10px;
			opacity: 1; 
		}
		60% {
			transform: rotate(-70deg); 
			width: 10px; 
			opacity: 1; 
		}
		70% {
			width: 5px;
			transform: rotate(0deg); 
			opacity: 0;
		}
	}
	@keyframes ≈-after-last {
		10% {
			transform: rotate(-90deg);
			width: 10px;
			height: 2px;
			opacity: .5; 
			left: 3px; 
			bottom: -1px; 
		}
		60% {
			transform: rotate(-90deg);
			width: 10px;
			height: 2px;
			opacity: .5; 
			left: 3px; 
			bottom: -1px; 
		}
		70% {
			width: 5px;
			height: 5px;
			transform: rotate(0deg); 
			opacity: 0;
		}
	}
}

@mixin ∫ {
	width: 100px;
	height: 40px;
	border-radius: 50%;
	position: relative;
	.loading {
		position: absolute;
		right: 0;
		top: 15px;
		width: 10px;
		height: 10px;
		border-radius: 50%;
		background-color: #fff;
		opacity: 0;
		animation: ∫-loading 1s linear infinite;
		@for $i from 2 through 4 {
			&:nth-child(#{$i}) {
				animation-delay: #{.25*(($i)-1)}s;
			}
		}
	}
	&::after,
	&::before {
		content: '';
		position: absolute;
		left: 0;
		height: 0;
		width: 0;
		border-width: 20px;
		border-style: solid;
		border-color: #fff transparent transparent #fff;
		border-radius: 50%;
	}
	&::after {
		bottom: 0px;
		transform: rotate(-135deg);
		animation: ∫-after 1s infinite;
	}
	&::before {
		top: 0;
		transform: rotate(45deg);
		animation: ∫-before 1s infinite;
	}
	@keyframes ∫-before {
		0%, 100% {
			transform: rotate(45deg);
		}
		50% {
			transform: rotate(10deg);
		}
	}
	@keyframes ∫-after {
		0%, 100% {
			transform: rotate(-135deg);
		}
		50% {
			transform: rotate(-105deg);
		}
	}
	@keyframes ∫-loading {
		0% {
			transform: translate(0px);
			opacity: 0;
		}
		100% {
			transform: translate(-80px);
			opacity: 1;
		}
	}
}

@mixin ∩ {
	display: flex;
	.loading {
		width: 15px;
		height: 15px;
		background-color: #fff;
		border-radius: 50%;
		margin: 5px;
		animation: ∩ 1s linear infinite;
		&:nth-child(2) {
			animation-delay: -.5s;
		}
	}
	@keyframes ∩ {
		0%, 100% {
			transform: scale(0);
			opacity: 0;
		}
		50% {
			transform: scale(1.2);
			opacity: 1;
		}
	}
}

@mixin ∞ {
	width: 8px;
	height: 8px;
	border-radius: 50%;
	box-shadow: -16px -16px 0 8px #6AAEFF,
				16px -16px 0 8px #71006A,
				16px 16px 0 8px #6EFF6A,
				-16px 16px 0 8px #886200;
	animation: ∞ 2s linear infinite;
	@keyframes ∞ {
		0% {
			box-shadow: -16px -16px 0 8px #6AAEFF,
				16px -16px 0 8px #71006A,
				16px 16px 0 8px #6EFF6A,
				-16px 16px 0 8px #886200;
		}
		14.285% {
			box-shadow: 16px -16px 0 8px #6AAEFF,
				16px -16px 0 8px #71006A,
				16px 16px 0 8px #6EFF6A,
				-16px 16px 0 8px #886200;
		}
		28.571% {
			box-shadow: 16px 16px 0 8px #6AAEFF,
				16px 16px 0 8px #71006A,
				16px 16px 0 8px #6EFF6A,
				-16px 16px 0 8px #886200;
		}
		42.857% {
			box-shadow: -16px 16px 0 8px #6AAEFF,
				-16px 16px 0 8px #71006A,
				-16px 16px 0 8px #6EFF6A,
				-16px 16px 0 8px #886200;
		}
		57.148% {
			box-shadow: -16px -16px 0 8px #6AAEFF,
				-16px -16px 0 8px #71006A,
				-16px -16px 0 8px #6EFF6A,
				-16px -16px 0 8px #886200;
		}

		71.428% {
			box-shadow: -16px -16px 0 8px #6AAEFF,
				16px -16px 0 8px #71006A,
				16px -16px 0 8px #6EFF6A,
				16px -16px 0 8px #886200;
		}
		85.714% {
			box-shadow: -16px -16px 0 8px #6AAEFF,
				16px -16px 0 8px #71006A,
				16px 16px 0 8px #6EFF6A,
				16px 16px 0 8px #886200;
		}
		100% {
			box-shadow: -16px -16px 0 8px #6AAEFF,
				16px -16px 0 8px #71006A,
				16px 16px 0 8px #6EFF6A,
				-16px 16px 0 8px #886200;
		}
	}
}

@mixin ∏ {
	position: relative;
	width: 50px;
	height: 50px;
	.loading {
		position: absolute;
		left: 0;
		top: 0;
		width: 100%;
		height: 100%;
		background-color: #fff;
		border-radius: 50%;
		&:nth-child(1) {
			animation: ∏-top-left 1s linear alternate infinite;
		}
		&:nth-child(2) {
			animation: ∏-top-right 1s linear  alternate infinite;
		}
		&:nth-child(3) {
			animation: ∏-bottom-left 1s linear  alternate infinite;
		}
		&:nth-child(4) {
			animation: ∏-bottom-right 1s linear  alternate infinite;
		}
	}
	@keyframes ∏-top-left {
		@for $i from 0 through 7 {
			#{100/7*$i}% {
				@if ($i == 0 or $i == 1){
					transform: none;
				} @else if($i == 2) {
					transform: translateX(-25%) scale(1,.8);
				} @else if($i == 3 or $i == 4) {
					transform: translateX(-50%) scale(.8,.8);
				} @else if($i == 5) {
					transform: translate(-50%, -25%) scale(.6,.8);
				} @else if($i == 6 or $i == 7) {
					transform: translate(-50%, -50%) scale(.6,.6);
				}
			}
		}
	}
	@keyframes ∏-top-right {
		@for $i from 0 through 7 {
			#{100/7*$i}% {
				@if ($i == 0 or $i == 1){
					transform: none;
				} @else if($i == 2) {
					transform: translateX(25%) scale(1,.8);
				} @else if($i == 3 or $i == 4) {
					transform: translateX(50%) scale(.8,.8);
				} @else if($i == 5) {
					transform: translate(50%, -25%) scale(.6,.8);
				} @else if($i == 6 or $i == 7) {
					transform: translate(50%, -50%) scale(.6,.6);
				}
			}
		}
	}
	@keyframes ∏-bottom-left {
		@for $i from 0 through 7 {
			#{100/7*$i}% {
				@if ($i == 0 or $i == 1){
					transform: none;
				} @else if($i == 2) {
					transform: translateX(-25%) scale(1,.8);
				} @else if($i == 3 or $i == 4) {
					transform: translateX(-50%) scale(.8,.8);
				} @else if($i == 5) {
					transform: translate(-50%, 25%) scale(.6,.8);
				} @else if($i == 6 or $i == 7) {
					transform: translate(-50%, 50%) scale(.6,.6);
				}
			}
		}
	}
	@keyframes ∏-bottom-right {
		@for $i from 0 through 7 {
			#{100/7*$i}% {
				@if ($i == 0 or $i == 1){
					transform: none;
				} @else if($i == 2) {
					transform: translateX(25%) scale(1,.8);
				} @else if($i == 3 or $i == 4) {
					transform: translateX(50%) scale(.8,.8);
				} @else if($i == 5) {
					transform: translate(50%, 25%) scale(.6,.8);
				} @else if($i == 6 or $i == 7) {
					transform: translate(50%, 50%) scale(.6,.6);
				}
			}
		}
	}
}

@mixin ϒ {
	width: 100px;
	height: 20px;
	border-radius: 10px;
	background-color: rgba(255, 255, 255, .5);
	position: relative;
	&::after {
		content: '';
		background-color: #fff;
		width: 20px;
		height: 10px;
		border-radius: 10px;
		position: absolute;
		top: 5px;
		left: 5px;
		animation: ϒ 1.5s linear infinite;
	}
	@keyframes ϒ {
		50% {
			transform: translateX(70px);
		}
	}
}

@mixin ω {
	width: 80px;
	height: 80px;
	border: 4px solid #fff;
	animation: ω 3s linear infinite;
	.ω-inner {
		height: 72px;
		width: 72px;
		margin: 4px auto;
		border: 4px solid #fff;
	    box-sizing: border-box;
		animation: ω-inner 1.5s linear infinite;
	}
	@keyframes ω {
		100% {
			transform: rotate(360deg); 
		}
	}
	@keyframes ω-inner {
		50% {
			border-width: 36px;
		}
	}
}

@mixin σ {
	width: 80px;
	height: 80px;
	border: 10px solid rgba(255, 255, 255, .5);
	border-radius: 50%;
	box-sizing: border-box;
	position: relative;
	animation: σ 1s linear infinite;
	&::after {
		content: '';
		position: absolute;
		top: -10px;
		left: -10px;
		width: 100%;
		height: 100%;
		border-radius: 50%;
		border-width: 10px;
		border-style: solid;
		border-color: transparent #fff transparent transparent;
	}
	@keyframes σ {
		100% {
			transform: rotate(360deg); 
		}
	}
}

@mixin λ {
	position: relative;
	width: 60px;
	height: 5px;
	.inner {
		position: absolute;
		width: 100%;
		height: 100%;
		top: 0;
		left: 0;
		background-color: #fff;
		animation: λ 1.5s ease infinite;
		@for $i from 1 through 4 {
			&:nth-child(#{$i}) {
				animation-delay: #{0.1*$i}s;
			}
		}
	}
	@keyframes λ {
		100% {
			transform: rotate(360deg); 
		}
	}
}